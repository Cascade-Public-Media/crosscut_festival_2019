<?php

/**
 * @file
 * Functions to support theming in the Crosscut Festival theme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_HOOK().
 *
 * @param $variables
 */
function crosscut_festival_preprocess_menu(&$variables) {
  $variables['is_front'] = FALSE;
  try {
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    $variables['db_is_active'] = FALSE;
  }

  // The main site menu uses anchors. When on other pages, those anchors must
  // be tied explicitly to the <front> route.
  if (isset($variables['menu_name']) && $variables['menu_name'] == 'main' &&
    !$variables['is_front']) {
    foreach ($variables['items'] as &$item) {
      /** @var \Drupal\Core\Url $url */
      $url = $item['url'];
      $new_url = Url::fromRoute(
        '<front>',
        $url->getRouteParameters(),
        $url->getOptions()
      );
      $item['url'] = $new_url;
    }
  }
}

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function crosscut_festival_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function crosscut_festival_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function crosscut_festival_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['#view_mode'])) {
    $suggestions[] = 'taxonomy_term__view_mode__' . $variables['elements']['#view_mode'];
  }
}
